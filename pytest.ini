[pytest]
# for unit tests lets use the in-memory broker and result backend
# this means that the tests for Celery can ran without any external dependencies (i.e. redis)
# we use as well an in-memory database
env =
    CELERY_BROKER_URL=memory://
    CELERY_RESULT_BACKEND=rpc://
    SQLALCHEMY_DATABASE_URI = 'sqlite:///:memory:'
    TESTING = True
#    SERVER_NAME = localhost
    FLASK_INTERNAL_URL=http://localhost:5000

# the lines below are for pytest to print the logs in the console
log_cli = true
log_cli_level = INFO

# print duration of each test
#addopts = --durations=0

# run tests only from testst 
# we do not want to run tests of the converter submodule (in yaptite/converter)
# as the converter tests assume to be run in a standalone converter repo
testpaths = tests
