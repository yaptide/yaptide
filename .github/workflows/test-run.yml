# A basic CI workflow that tests if the app works and then deploys it on an openstack machine

name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
       matrix:
         python-version: ['3.9', '3.10']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt

      - name: Run main tests
        run: pytest tests/

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    env:
      BACKEND_HOST: 30.30.30.8
      BACKEND_USER: ubuntu
      FRONTEND_HOST: 149.156.182.181
      FRONTEND_USER: ubuntu
      SHIELDHIT_PATH: "/home/ubuntu/usr/shieldhit/develop/bin"

    steps:
      # get the repo to the github agent
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      # add keys to the SSH agent
      - uses: webfactory/ssh-agent@v0.5.3
        if: github.ref == 'refs/heads/master'
        with:
          ssh-private-key: |
            ${{ secrets.DEPLOY_C3_TEST }}

      # Create the known_hosts file with the open stack machines public keys
      - name: Add host to known_hosts
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H ${{ env.FRONTEND_HOST }} >> ~/.ssh/known_hosts

      # kill docker containers, then remove them
      - name: Kill our docker containers
        continue-on-error: true
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.BACKEND_HOST }}
          username: ${{ env.BACKEND_USER }}
          key: ${{ secrets.DEPLOY_C3_TEST }}
          proxy_host: ${{ env.FRONTEND_HOST }}
          proxy_username: ${{ env.FRONTEND_USER }}
          proxy_key: ${{ secrets.DEPLOY_C3_TEST }}
          script: |
            docker stop yaptide_flask
            docker stop yaptide_worker
            docker stop yaptide_redis
            docker rmi yaptide_flask
            docker rmi yaptide_worker
            docker system prune --all --force --volumes

    
      # copy the new files form the github agent onto the openstack machine via proxy (inspired by: https://stackoverflow.com/questions/16654751/rsync-through-ssh-tunnel)
      - name: Copy files to the machine
        if: github.ref == 'refs/heads/master'
        run: rsync -e "ssh -A ${{ env.FRONTEND_USER }}@${{ env.FRONTEND_HOST }} ssh" . ${{ env.BACKEND_USER }}@${{ env.BACKEND_HOST }}:~/yaptide --delete --recursive

      # No need to run these processes using screen, as docker-compose with --detach option sends the process to the background
      - name: Compose docker images and run them
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.BACKEND_HOST }}
          username: ${{ env.BACKEND_USER }}
          key: ${{ secrets.DEPLOY_C3_TEST }}
          proxy_host: ${{ env.FRONTEND_HOST }}
          proxy_username: ${{ env.BACKEND_USER }}
          proxy_key: ${{ secrets.DEPLOY_C3_TEST }}
          command_timeout: 30m
          script: |
            cd yaptide
            cp /home/ubuntu/usr/shieldhit/develop/bin/shieldhit .
            SHIELDHIT_PATH=shieldhit docker-compose up --detach --build
            rm shieldhit
            docker exec -w /usr/local/app/yaptide/data yaptide_flask python3 db_script.py
