openapi: 3.0.3
info:
  title: Yaptide Project Api Documentation
  version: 1.0.0
  description: Yaptide Project Api Documentation
servers:
  - url: http://localhost:5000
paths:
  /:
    get:
      security:
        - basicAuth: [ ]
      summary: Allows to check if server is alive
      description: Allows to check if server is alive. If server is down it won't respond to this request
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'

# Authorisation Routes
  /auth/register:
    put:
      summary: Allows registration of new users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterLoginRequest'
      responses:
        '201':
          description: Returns message - User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '400':
          description: Bad Request - Missing payload or keys in payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '403':
          description: Forbidden - User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
  /auth/login:
    post:
      summary: Allows to login the user - server sets refresh and access tokens in cookies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterLoginRequest'
      responses:
        '202':
          description: Includes expiration time in milliseconds of new access tokens with message - Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  access_exp:
                    type: integer
                  refresh_exp:
                    type: integer
        '400':
          description: Bad Request - Missing payload or keys in payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '401':
          description: Forbidden - Invalid login or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
  /auth/refresh:
    get:
      summary: Allows to refresh access token - server sets new access token in cookies
      responses:
        '200':
          description: Includes expiration time in milliseconds of new access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  access_exp:
                    type: integer
        '401':
          description: Unauthorized - No token provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '403':
          description: Forbidden - User not found or log in required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
  /auth/status:
    get:
      summary: Allows to retrieve logged in user information
      responses:
        '200':
          description: Includes logged in user information, shown in example response below
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  username:
                    type: string
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '403':
          description: Forbidden - User not found, log in required or token refresh required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
  /auth/logout:
    delete:
      summary: Allows to logout the user - server removes access and refresh tokens from cookies. If nobody was logged in then just nothing happens
      responses:
        '200':
          description: User was successfully logged out
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'

# Keycloak auth Routes
  /auth/keycloak:
    post:
      summary: Allows to login the user with keycloak credentials - server sets refresh and access tokens in cookies
      description: At current state this endpoint works only with server running on C3
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: keycloak token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeycloakRequest'
      responses:
        '202':
          description: Includes expiration time in milliseconds of new access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  access_exp:
                    type: integer
        '400':
          description: Bad Request - Missing payload or keys in payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '401':
          description: Forbidden - No token provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'

# User Routes
  /user/simulations:
    get:
      summary: Allows for getting user's simulations
      parameters:
        - in: query
          name: page_size
          schema:
            type: integer
          description: Specifies the page size from range [0,100] - incorrect or
                       non provided value will result in sending page with size 10
        - in: query
          name: page_idx
          schema:
            type: integer
          description: Specifies the page index to be send - incorrect or non
                       provided value will result in sending page with index 0
        - in: query
          name: order_by
          schema:
            type: string
            enum: [start_time, end_time]
          description: Specifies the parameter by which pages are sorted, available are start_time or end_time
                       - incorrect or non provided value will result in sending page sorted by start_time
        - in: query
          name: order_type
          schema:
            type: string
            enum: [ascend, descend]
          description: Specifies the order in which pages are sorted, available are ascend or descend
                       - incorrect or non provided value will result in sending page sorted by ascend
      responses:
        '200':
          description: Includes list of user's simulations
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  page_count:
                    type: integer
                    description: returns the number of available pages
                  simulations_count:
                    type: integer
                    description: returns the number of owned simulations
                  simulations:
                    description: is a list of simulations returned in requested page
                    type: array
                    items:
                      $ref: '#/components/schemas/Simulation'

        '400':
          description: Bad Request - Missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '403':
          description: Forbidden - User not found, log in required or token refresh required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
  /user/clusters:
    description: Returns available clusters
    get:
      summary: Allows for getting available clusters
      responses:
        '200':
          description: Includes list of available clusters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  clusters:
                    type: array
                    items:
                      type: object
                      properties:
                        cluster_name:
                          type: string
        '400':
          description: Bad Request - Missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '403':
          description: Forbidden - User not found, log in required or token refresh required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'

# Jobs Routes
  /jobs:
    get:
      summary: Allows for getting job status from database.
      description: Endpoint designed for getting periodical job status from database.
      parameters:
        - in: query
          name: job_id
          schema:
            type: string
      responses:
        '200':
          description: Includes status of the job
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  job_state:
                    type: string
                    enum: [PENDING, RUNNING, COMPLETED, FAILED]
                    description: job state
                  job_task_status:
                    type: array
                    items:
                      $ref: '#/components/schemas/JobTaskStatus'
        '400':
          description: Bad Request - Missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '403':
          description: Forbidden - User not found, log in required, token refresh required or job with provided ID does not belong to the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '404':
          description: Job with provided ID does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '408':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
  /jobs/direct:
    post:
      summary: Allows for submitting jobs to run directly on server.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JobsRequest'
                - $ref: '#/components/schemas/Input'
      responses:
        '202':
          description: Includes job_id and additional information about submited job
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                  message:
                    type: string
        '400':
          description: Bad Request - Missing payload or keys in payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '403':
          description: Forbidden - User not found, log in required or token refresh required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
    get:
      summary: Allows for getting job status and additional job's info. Available only for jobs run directly.
      description: At current stage of development it does not provide any addtional features than GET method from '/jobs' route - it does the same thing but it is available only for jobs run directly.
      parameters:
        - in: query
          name: job_id
          schema:
            type: string
      responses:
        '200':
          description: Includes status and additional information about the job
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  job_state:
                    type: string
                    enum: [PENDING, RUNNING, COMPLETED, FAILED]
                    description: job state
                  job_task_status:
                    type: array
                    items:
                      $ref: '#/components/schemas/JobTaskStatus'
        '400':
          description: Bad Request - Missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '403':
          description: Forbidden - User not found, log in required, token refresh required or job with provided ID does not belong to the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '404':
          description: Job with provided ID does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '408':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
    delete:
      summary: Allows for job cancelation. Available only for jobs run directly.
      parameters:
        - in: query
          name: job_id
          schema:
            type: string
      responses:
        '200':
          description: Returns information about main job and subtasks' cancelation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsDirectDeleteResponse'
        '400':
          description: Bad Request - Missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '403':
          description: Forbidden - User not found, log in required, token refresh required or job with provided ID does not belong to the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '404':
          description: Job with provided ID does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '408':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
  /jobs/batch:
    post:
      summary: Allows for submitting jobs to run on SLURM.
      description: This endpoint can be used only by keycloak authenticated users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JobsRequest'
                - $ref: '#/components/schemas/Input'
                - $ref: '#/components/schemas/BatchOptions'
      responses:
        '202':
          description: Includes job_id and additional information about submited job
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                  message:
                    type: string
                  sh_files:
                    type: object
                    description: contains sh files used by the job (additional info in response from '/jobs/batch')
                    properties:
                      submit:
                        type: string
                        description: submit is a file which prepares the environment and starts array and collect
                      array:
                        type: string
                        description: array is array job script which runs the simulation
                      collect:
                        type: string
                        description: collect is a script collecting results generated by simulation
                  submit_stdout:
                    type: string
                    description: submit_stdout is output generated by submit.sh (additional info in response from '/jobs/batch')
        '400':
          description: Bad Request - Missing payload or keys in payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '403':
          description: Forbidden - User not found, log in required or token refresh required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
    get:
      summary: Allows for getting job status and additional job's info. Available only for jobs run on SLURM.
      description: This endpoint can be used only by keycloak authenticated users. It is recommended not to use it very often because of the high load it puts on the SLURM system.
      parameters:
        - in: query
          name: job_id
          schema:
            type: string
      responses:
        '200':
          description: Includes status and additional information about the job
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  job_state:
                    type: string
                    enum: [PENDING, RUNNING, COMPLETED, FAILED]
                    description: job state
                  job_task_status:
                    type: array
                    items:
                      $ref: '#/components/schemas/JobTaskStatus'
                  sh_files:
                    type: object
                    description: contains sh files used by the job (additional info in response from '/jobs/batch')
                    properties:
                      submit:
                        type: string
                        description: submit is a file which prepares the environment and starts array and collect
                      array:
                        type: string
                        description: array is array job script which runs the simulation
                      collect:
                        type: string
                        description: collect is a script collecting results generated by simulation
                  submit_stdout:
                    type: string
                    description: submit_stdout is output generated by submit.sh (additional info in response from '/jobs/batch')
        '400':
          description: Bad Request - Missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '403':
          description: Forbidden - User not found, log in required, token refresh required or job with provided ID does not belong to the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '404':
          description: Job with provided ID does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '408':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
    delete:
      summary: Allows for job cancelation. Available only for jobs run on SLURM.
      description: This endpoint can be used only by keycloak authenticated users
      parameters:
        - in: query
          name: job_id
          schema:
            type: string
      responses:
        '200':
          description: Job was succesfully canceled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '400':
          description: Bad Request - Missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '403':
          description: Forbidden - User not found, log in required, token refresh required or job with provided ID does not belong to the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '404':
          description: Job with provided ID does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '408':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'

# Inputs Route
  /inputs:
    get:
      summary: Allows for retrieving input used to run simulation
      parameters:
        - in: query
          name: job_id
          schema:
            type: string
      responses:
        '200':
          description: Includes input used to run simulation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  input:
                    type: object
                    properties:
                      input_json:
                        type: object
                        description: available only if simulation was run with JSON input
                      input_files:
                        type: object
                        description: files used by simulation
                      input_type:
                        type: string
                        enum: [editor, files]
                        description: simulation input type
                      number_of_all_primaries:
                        type: integer
                        description: requested number of all primaries
        '400':
          description: Bad Request - Missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '403':
          description: Forbidden - User not found, log in required, token refresh required or job with provided ID does not belong to the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '404':
          description: Job with provided ID does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'

# Result Routes
  /results:
    description: Now it works properly only for simulations run on direct. Fetching results from batch will always end up with getting response with 400 status code.
    get:
      summary: Allows getting results of the simulation
      parameters:
        - in: query
          name: job_id
          schema:
            type: string
      responses:
        '200':
          description: Includes results of the simulation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  estimators:
                    type: array
                    items:
                      $ref: '#/components/schemas/Estimator'
                    description: list of resulting estimators
        '400':
          description: Bad Request - Missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '403':
          description: Forbidden - User not found, log in required, token refresh required or job with provided ID does not belong to the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '404':
          description: Job with provided ID does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'

# Task Routes
  /tasks:
    description: Route dedicated for Backend internal communication
    post:
      summary: Updates task state
      description: Used by tasks to update their state
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                simulation_id:
                  type: integer
                  description: id of task's parent simulation
                task_id:
                  type: string
                  description: id task to update
                update_key:
                  type: string
                  description: authentication key provided to tasks
                update_dict:
                  type: object
                  description: dict containing update data
              required:
                - simulation_id
                - task_id
                - update_key
                - update_dict
      responses:
        default:
          description: Response JSON for all codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'

# Logfiles Routes
  /logfiles:
    post:
      summary: Allows for uploading logfiles of the simulation by its tasks
      description: At current stage of development incoming logfiles override existing ones
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                simulation_id:
                  type: integer
                  description: id of task's parent simulation
                update_key:
                  type: string
                  description: authentication key provided to tasks
                logfiles:
                  type: object
                  description: dict containing log files
              required:
                - simulation_id
                - update_key
                - logfiles
      responses:
        default:
          description: Response JSON for all codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
    get:
      summary: Allows getting logfiles of the simulation
      parameters:
        - in: query
          name: job_id
          schema:
            type: string
      responses:
        '200':
          description: Includes logfiles of the simulation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  logfiles:
                    type: object
                    description: dict of log files with names as keys and content as values.
        '400':
          description: Bad Request - Missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '403':
          description: Forbidden - User not found, log in required, token refresh required or job with provided ID does not belong to the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '404':
          description: Job with provided ID does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'

# Components
components:
  securitySchemes:
    basicAuth: # <-- arbitrary name for the security scheme
      type: http
      scheme: basic
  schemas:
    BasicResponse:
      type: object
      properties:
        message:
          type: string
          description: body message
    KeycloakRequest:
      type: object
      properties:
        username:
          type: string
      required:
        - username
    RegisterLoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    Metadata:
      type: object
      description: static additional information
      properties:
        platform:
          type: string
          description: specifies platform on which simulation is running, can be DIRECT or BATCH
        server:
          type: string
          description: specifies platform on which simulation is running, can be DIRECT or BATCH
        input_type:
          type: string
          description: specifies input which was used to run simulation, can be YAPTIDE_PROJECT or INPUT_FILES
        sim_time:
          type: string
          description: specifies simulator which was used to run simulation, can be SHIELDHIT or DUMMY
    Simulation:
      type: object
      properties:
        title:
          type: string
          description: custom title set to for this simulation
        job_id:
          type: string
          description: id of the job
        start_time:
          type: string
          description: starting time of the simulation
        end_time:
          type: string
          description: ending time of the simulation - if it is still running the value is NULL
        metadata:
          $ref: '#/components/schemas/Metadata'
    Input:
      oneOf:
        - type: object
          properties:
            input_json:
              type: object
              description: specifies input json
          required:
            - input_json
        - type: object
          properties:
            input_files:
              type: object
              properties:
                beam.dat:
                  type: string
                detect.dat:
                  type: string
                geo.dat:
                  type: string
                mat.dat:
                  type: string
              description: specifies input files
          required:
            - input_files
    JobsRequest:
      type: object
      properties:
        ntasks:
          type: integer
          description: specifies number of parallel tasks to be run, default is maximum available for '/jobs/direct' and 1 for '/jobs/batch'
        sim_type:
          type: string
          enum: [shieldhit, dummy]
          description: specifies simulator type
        title:
          type: string
          description: custom title set to for this simulation, default is workspace
        input_type:
          type: string
          enum: [editor, files]
          description: specifies input type
        # oneOf:
        #   - input_files:
        #     type: array
        #     items:
        #       type: object
        #       properties:
        #         beam.dat:
        #           type: string
        #         detect.dat:
        #           type: string
        #         geo.dat:
        #           type: string
        #         mat.dat:
        #           type: string
        #     description: is required if input_type is files
        #   - input_json:
        #     type: object
        #     description: input_json is required if input_type is editor
      required:
        - ntasks
        - input_type
        - sim_type
    BatchOptions:
      type: object
      properties:
        batch_options:
          type: object
          description: available options can be found here&#58; https://slurm.schedmd.com/sbatch.html. NOTE&#58; if batch_options is not provided, SLURM will run both scripts with default settings
          properties:
            cluster_name:
              type: string
              description: stands for the cluster to be used to run simulation; it has to be one of available clusters for the user - check '/user/clusters' endpoint description; if it is not provided or provided cluster name is incorrect, first available cluster will be used
            array_options:
              type: object
              description: dictionary of command line options used while running files with sbatch. Pairs should be option name as key and option value as value. If 2 same parameters are specified in both options and coresponding header, parameters from header will be ignored because command line options are more important for the SLURM
            array_header:
              type: string
              description: header for files run on SLURM with sbatch
            collect_options:
              type: object
              description: dictionary of command line options used while running files with sbatch. Pairs should be option name as key and option value as value. If 2 same parameters are specified in both options and coresponding header, parameters from header will be ignored because command line options are more important for the SLURM
            collect_header:
              type: string
              description: header for files run on SLURM with sbatch
    JobTaskStatus:
      type: object
      description: error, logfiles, input_files, input_json and results are deprecated&#58; error is now sent as message, logfiles - accessed via /logfiles endpoint, results - accessed via /results endpoint, input_files and input_json - accessed via /inputs endpoint.
      properties:
        task_state:
          type: string
          enum: [PENDING, RUNNING, COMPLETED, FAILED]
          description: task state
        simulated_primaries:
          type: integer
          description: primaries already calculated by the task
        requested_primaries:
          type: integer
          description: primaries to calculate for this task
        last_update_time:
          type: string
          description: last time when task was updated
        estimated_time:
          type: object
          description: is returned only, when task_state is RUNNING - not always because estimation is prepared after some period of time
          properties:
            hours:
              type: integer
            minutes:
              type: integer
            seconds:
              type: integer
    JobsDirectDeleteResponse:
      type: object
      properties:
        message:
          type: string
        merge:
          type: object
          properties:
            message:
              type: string
            job_state:
              type: string
              enum: [PENDING, RUNNING, COMPLETED, FAILED]
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/CanceledTaskStatus'
    CanceledTaskStatus:
      type: object
      properties:
        message:
          type: string
        task_state:
          type: string
          enum: [PENDING, RUNNING, COMPLETED, FAILED]
    Estimators:
      type: object
      description: dictionary of estimators with names as keys and values as dictionaries with estimator parameters

security:
  - basicAuth: []  # <-- use the same name here