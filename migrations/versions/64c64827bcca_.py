"""empty message

Revision ID: 64c64827bcca
Revises: 4027fc5cbcb1
Create Date: 2024-11-19 23:07:54.988246

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import sessionmaker
from sqlalchemy.sql import text
from yaptide.persistence.models import decompress


# revision identifiers, used by Alembic.
revision = '64c64827bcca'
down_revision = '4027fc5cbcb1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Page', schema=None) as batch_op:
        batch_op.add_column(sa.Column('page_name', sa.String(), nullable=False, server_default=""))
        batch_op.add_column(sa.Column('page_dimension', sa.Integer(), nullable=False, server_default="-1"))

    bind = op.get_bind()
    session = sessionmaker(bind=bind)()

    pages = session.execute(text('SELECT id, compressed_data FROM "Page"')).fetchall()
    
    for page in pages:
        compressed_data = page.compressed_data
        
        decompressed_data = decompress(compressed_data)
        
        page_name = decompressed_data["metadata"]["name"]
        page_dimension = decompressed_data["dimensions"]

        session.execute(text("""
            UPDATE "Page"
            SET page_name = :page_name, page_dimension = :page_dimension
            WHERE id = :id
        """), {"page_name": page_name, "page_dimension": page_dimension, "id": page.id})

    session.commit()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Page', schema=None) as batch_op:
        batch_op.drop_column('page_dimension')
        batch_op.drop_column('page_name')

    # ### end Alembic commands ###
